# .github/workflows/build-and-deploy-cli.yml
name: Build and Deploy to ACI via CLI

on:
  push:
    branches: [main]          # adjust if you use a different default branch
  workflow_dispatch:          # allow manual trigger from the Actions tab

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # 1Ô∏è‚É£  Check out the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # 2Ô∏è‚É£  Log in to Azure Container Registry using admin creds
    - name: Log in to ACR
      env:
        REGISTRY: ${{ secrets.ACR_NAME }}.azurecr.io
      run: |
        echo "${{ secrets.ACR_PASSWORD }}" | \
          docker login $REGISTRY -u ${{ secrets.ACR_USERNAME }} --password-stdin

    # 3Ô∏è‚É£  Build and tag the Docker image
    - name: Build Docker image
      env:
        REGISTRY: ${{ secrets.ACR_NAME }}.azurecr.io
      run: docker build -t $REGISTRY/myapp:latest .

    # 4Ô∏è‚É£  Push the image to ACR
    - name: Push Docker image
      env:
        REGISTRY: ${{ secrets.ACR_NAME }}.azurecr.io
      run: docker push $REGISTRY/myapp:latest

    # 5Ô∏è‚É£  Deploy to Azure Container Instances via az CLI (no az login needed in sandbox)
    - name: Deploy to ACI using az CLI
      env:
        RG:      ${{ secrets.AZURE_RESOURCE_GROUP }}
        REGISTRY: ${{ secrets.ACR_NAME }}.azurecr.io
        SUB_ID:  ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      run: |
        az container create \
          --subscription "$SUB_ID" \
          --resource-group "$RG" \
          --name myapp-container-${{ github.run_number }} \
          --image $REGISTRY/myapp:latest \
          --registry-login-server $REGISTRY \
          --registry-username ${{ secrets.ACR_USERNAME }} \
          --registry-password ${{ secrets.ACR_PASSWORD }} \
          --dns-name-label myapp-${{ github.run_number }} \
          --ports 80 \
          --location westus

    # 6Ô∏è‚É£  Display the DNS-based URL
    - name: Show Live App URL
      run: |
        echo "üöÄ Your app is live at:"
        echo "http://myapp-${{ github.run_number }}.westus.azurecontainer.io"

    # 7Ô∏è‚É£  (Optional) Also show the direct public IP
    - name: Get ACI Public IP
      env:
        RG:     ${{ secrets.AZURE_RESOURCE_GROUP }}
        SUB_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      run: |
        IP=$(az container show \
              --subscription "$SUB_ID" \
              --resource-group "$RG" \
              --name myapp-container-${{ github.run_number }} \
              --query "ipAddress.ip" -o tsv)
        echo "üìç Direct IP access: http://$IP"
